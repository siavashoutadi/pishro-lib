version: '3.8'

{% raw -%}
services:
  {{ service.name }}:
    image: {{ image.repository }}:{{ image.tag }}
    {% if environments[service.name] %}
    environment:
      {% for env, options in environments[service.name].items() %}
      - {{ options.key }}={{ options.value }}
      {% endfor %}
    {% endif %}
    secrets:
      - {{ package_name }}_environments
    {% if networks %}
    networks:
      {% for net in networks %}
      - {{ net }}
      {% endfor %}
    {% endif %}
    {% if volumes %}
    volumes:
      {% for volume in volumes %}
      - {{ volume }}
      {% endfor %}
    {% endif %}
    {% if ports %}
    ports:
      {% for port in ports %}
      - {{ port }}
      {% endfor %}
    {% endif %}
    {% endraw %}
    configs:
      - source: {% raw %}{{ stack_name }}{% endraw %}-{{ package_name }}-conf
        target: /etc/{{ package_name }}/{{ package_name }}.conf
        mode: 0444
    {%- raw %}
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: '3'
    healthcheck:
      test: ["CMD-SHELL", "is_healthy.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      mode: {{ deploy.mode }}
      replicas: {{ deploy.replicas }}
      endpoint_mode: {{ deploy.endpoint_mode }}
      {% if deploy.labels %}
      labels:
        {% for key, value in deploy.labels.items() %}
        {{ key }}: "{{ value }}"
        {% endfor %}
      {% endif %}
      {% if deploy.placement.preferences or deploy.placement.constraints %}
      placement:
        {% if deploy.placement.constraints %}
        constraints:
          {% for constraint in deploy.placement.constraints %}
          - {{ constraint }}
          {% endfor %}
        {% endif %}
        {% if deploy.placement.preferences %}
        preferences:
          {% for preference in deploy.placement.preferences %}
          - spread: {{ preference.spread }}
          {% endfor %}
        {% endif %}
      {% endif %}
      resources:
        limits:
          cpus: '{{ deploy.resources.limits.cpu }}'
          memory: {{ deploy.resources.limits.memory }}
        reservations:
          cpus: '{{ deploy.resources.requests.cpu }}'
          memory: {{ deploy.resources.requests.memory }}
      restart_policy:
        condition: {{ deploy.restart_policy.condition }}
        delay: {{ deploy.restart_policy.delay }}
        max_attempts: {{ deploy.restart_policy.max_attempts }}
        window: {{ deploy.restart_policy.window }}
      update_config:
        parallelism: {{ deploy.update_config.parallelism }}
        delay: {{ deploy.update_config.delay }}
        failure_action: {{ deploy.update_config.failure_action }}
        monitor: {{ deploy.update_config.monitor }}
        max_failure_ratio: {{ deploy.update_config.max_failure_ratio }}
        order: {{ deploy.update_config.order }}
      rollback_config:
        parallelism: {{ deploy.rollback_config.parallelism }}
        delay: {{ deploy.rollback_config.delay }}
        failure_action: {{ deploy.rollback_config.failure_action }}
        monitor: {{ deploy.rollback_config.monitor }}
        max_failure_ratio: {{ deploy.rollback_config.max_failure_ratio }}
        order: {{ deploy.rollback_config.order }}
    {% endraw %}

{% raw -%}
configs:
  {{ stack_name }}{% endraw %}-{{ package_name }}-conf:
    external: true

{% raw -%}
networks:
  {% for net in networks %}
  {{ net}}:
    external: true
  {% endfor %}
secrets:
  {{ package_name }}_environments:
    file: secrets/environments
{% endraw %}
